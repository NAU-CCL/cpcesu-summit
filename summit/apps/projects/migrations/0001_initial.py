# -*- coding: utf-8 -*-
# Generated by Django 1.11.18 on 2019-05-09 12:23
from __future__ import unicode_literals

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import summit.apps.projects.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('summit_auth', '0004_auto_20190502_0752'),
    ]

    operations = [
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, upload_to=summit.apps.projects.models.get_directory_path, verbose_name='Select File(s)')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abbrv', models.TextField(blank=True, max_length=64, null=True)),
                ('name', models.TextField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ModFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, upload_to=summit.apps.projects.models.get_mod_directory_path, verbose_name='Select File(s)')),
            ],
        ),
        migrations.CreateModel(
            name='Modification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mod_desc', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Description')),
                ('mod_num', models.CharField(help_text='An identification for the specific modification made.', max_length=500, null=True, verbose_name='Modification #')),
                ('mod_type', models.CharField(blank=True, choices=[('NONE', 'None'), ('FUNDED', 'Funded'), ('NO-COST', ' No-cost Time Extension'), ('ADMIN', 'Administrative'), ('FUNDED_EXT', 'Funded & Time Extension'), ('FUNDED_ADMIN', 'Funded & Administrative'), ('NO_COST_EXT_ADMIN', 'No-cost Time Extension & Administrative')], default=('NONE', 'None'), max_length=50, null=True, verbose_name='Modification Type')),
                ('mod_notes', models.TextField(blank=True, verbose_name='Modification Notes')),
                ('mod_amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12)),
                ('mod_approved', models.DateField(blank=True, null=True, verbose_name='Approved')),
                ('mod_executed', models.DateField(blank=True, null=True, verbose_name='Executed')),
                ('mod_extension', models.DateField(blank=True, null=True, verbose_name='Extension')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('award_office', models.CharField(blank=True, choices=[('IMRO', 'IMRO'), ('WASO', 'WASO'), ('AKRO', 'AKRO'), ('MWRO', 'MWRO'), ('NERO', 'NERO'), ('NCRO', 'NCRO'), ('PWRO', 'PWRO'), ('SERO', 'SERO')], max_length=10, null=True)),
                ('budget', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Initial funding amount (USD)', max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('9999999.99'))], verbose_name='Initial')),
                ('description', models.TextField(blank=True, help_text='A free-form description of the plugin.', verbose_name='Abstract/Description')),
                ('discipline', models.CharField(blank=True, choices=[('NONE', 'None'), ('NATURAL', 'Natural'), ('CULTURAL', 'Cultural'), ('SOCIAL', 'Social'), ('INTERDISCIPLINARY', 'Interdisciplinary')], default=('NONE', 'None'), help_text='The discipline related to the project', max_length=21)),
                ('exec_start_date', models.DateField(blank=True, default=None, null=True, verbose_name='Executed')),
                ('field_of_science', models.CharField(blank=True, choices=[('NONE', 'None'), ('ENVIRO_SCI', 'Environmental Sciences'), ('LIFE_SCI', 'Life Sciences'), ('MATH_CS', 'Math & Computer Sciences'), ('PHYSICAL_SC', 'Physical Sciences'), ('SOCIAL_SC', 'Social Sciences')], default=('NONE', 'None'), help_text='A specific field of science for the project.', max_length=500, verbose_name='Field of Science')),
                ('final_report', models.BooleanField(default=False, verbose_name='Final Report')),
                ('fiscal_year', models.PositiveSmallIntegerField(blank=True, default=2019, verbose_name='Fiscal Year')),
                ('init_start_date', models.DateField(blank=True, default=None, null=True, verbose_name='Project Initially Received')),
                ('monitoring', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, help_text='General details or specifics that are worth writing down')),
                ('num_of_students', models.PositiveSmallIntegerField(blank=True, default=0, help_text='Number of students participating in student support.', verbose_name='Number of Students')),
                ('p_num', models.CharField(blank=True, help_text='Project number. Sometimes not received.', max_length=500, null=True, verbose_name='Award #')),
                ('project_title', models.CharField(blank=True, help_text='The title of the project', max_length=500, null=True)),
                ('r_d', models.CharField(blank=True, choices=[('NA', 'NA (TA or Educ)'), ('APPLIED_RESEARCH', 'Applied Research'), ('BASIC_RESEARCH', 'Basic Research'), ('R_D', 'Research and Development'), ('DEVELOPMENT', 'Development')], help_text='Research and Development fields', max_length=50, verbose_name='Research & Development Type')),
                ('reviewed', models.DateField(blank=True, default=None)),
                ('sci_method', models.BooleanField(default=False)),
                ('sensitive', models.BooleanField(default=False, help_text='True if data is sensitive and cannot be revealed to the public.', verbose_name='Sensitive')),
                ('short_summary', models.CharField(blank=True, help_text='This field is displayed in "overviews" such as the projects listing page.', max_length=500, verbose_name='Short Description')),
                ('src_of_funding', models.CharField(blank=True, choices=[('NONE', 'None'), ('PARK', 'Park Base'), ('REGION', 'Region Base'), ('SOURCE', 'NR Project Fund Source'), ('PROGRAM', 'I&M Program'), ('OTHER_PROJECT_SOURCE', 'Other Service-wide Project Source'), ('REA_FEE_80', '80% REA Fee'), ('REA_FEE_20', '20% REA Fee'), ('OTHER_NPS_SOURCE', 'Other NPS Appropriated Source'), ('OTHER', 'OTHER-non-NPS')], default=('NONE', 'None'), help_text='The source of the funding', max_length=500, verbose_name='Source of Funding')),
                ('status', models.CharField(blank=True, choices=[('DRAFT', 'Drafting'), ('APPROVED', 'Approved'), ('EXECUTED', 'Executed'), ('CLOSED', 'Closed'), ('LEGACY', 'Legacy')], default=('DRAFT', 'Drafting'), max_length=50)),
                ('tent_end_date', models.DateField(blank=True, default=None, null=True, verbose_name='Tentative End Date')),
                ('tent_start_date', models.DateField(blank=True, default=None, null=True, verbose_name='Tentative Start Date')),
                ('type', models.CharField(blank=True, choices=[('NONE', 'None'), ('EDUCATION', 'Education'), ('RESEARCH', 'Research'), ('TECHNICAL', 'Technical'), ('ASSISTANCE', 'Assistance')], help_text='Type of project implemented', max_length=50, verbose_name='Project Type')),
                ('fed_poc', models.CharField(blank=True, help_text='federal point of contact', max_length=500, verbose_name='Federal Point of Contact')),
                ('funding', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='The current/final funding amount', max_digits=12)),
                ('comm_start_date', models.DateField(blank=True, default=None, null=True, verbose_name='Review Comments Sent')),
                ('task_agreement_start_date', models.DateField(blank=True, default=None, null=True, verbose_name='Approved')),
                ('actual_start', models.DateField(blank=True, default=None, null=True, verbose_name='Actual Start Date')),
                ('actual_end', models.DateField(blank=True, default=None, null=True, verbose_name='Actual Start Date')),
                ('perm_share', models.BooleanField(default=False, verbose_name='Permission to share')),
                ('award_amt', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='The amount that was awarded', max_digits=12)),
                ('alt_coord', models.CharField(blank=True, help_text='The Alternate Research Coordinator / CESU Representative', max_length=500, verbose_name='Alternate Research Coordinator / CESU Representative')),
                ('req_iacuc', models.BooleanField(default=False, verbose_name='Requires IACUC Review/ Concurrence')),
                ('youth_vets', models.CharField(choices=[('NO', 'NO'), ('YES', 'YES')], default=('NO', 'NO'), max_length=500, verbose_name='Youth/Vets')),
                ('field_of_science_sub', models.CharField(blank=True, choices=[('ES_AS', 'ES - Atmospheric Sciences'), ('ES_GS', 'ES - Geological Sciences'), ('ES_O', 'ES â€“ Oceanography'), ('ES_ES', 'ES - Environmental Sciences NEC'), ('LS_BI', 'LS - Biological (excl.Environmental)'), ('ES_EB', 'LS - Environmental Biology'), ('LS_AS', 'LS - Agricultural Science'), ('LS_MS', 'LS - Medical Science'), ('LS_LS', 'LS - Life Science NEC')], default=('ES_AS', 'ES - Atmospheric Sciences'), max_length=100, null=True, verbose_name='Sub-Fields (Field of Science)')),
                ('job_id', models.CharField(blank=True, max_length=500, null=True)),
                ('legacy_award_number', models.TextField(default='', verbose_name='Legacy - Award Number')),
                ('legacy_match_amount', models.TextField(default='', verbose_name='Legacy - Match Amount')),
                ('legacy_ca_account_number', models.TextField(default='', verbose_name='Legacy - CA Account Number')),
                ('legacy_account_number', models.TextField(default='', verbose_name='Legacy - Account Number')),
                ('legacy_area_org', models.TextField(default='', verbose_name='Legacy - Area/Org')),
                ('legacy_pwe', models.TextField(default='', verbose_name='Legacy - PWE')),
                ('legacy_project_products', models.TextField(default='', verbose_name='Legacy - Project Products')),
                ('legacy_received_report_date', models.TextField(default='', verbose_name='Legacy - Received Report Date')),
                ('legacy_sent_to_tic', models.TextField(default='', verbose_name='Legacy - Sent to TIC')),
                ('cesu_unit', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cesu_unit', to='summit_auth.CESUnit', verbose_name='CESUnit')),
                ('federal_agency', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='federal_agency', to='summit_auth.FederalAgency', verbose_name='Agency')),
                ('location', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='location', to='summit_projects.Location', verbose_name='Place')),
                ('partner', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='partner', to='summit_auth.Partner')),
                ('pp_i', models.ForeignKey(blank=True, default=None, help_text='Partner Principle Investigator', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pp_i', to='summit_auth.UserProfile', verbose_name='Partner Principle Investigator')),
                ('project_manager', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project_manager', to='summit_auth.UserProfile', verbose_name='Agency Project Manager')),
                ('staff_member', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='staff_member', to='summit_auth.UserProfile', verbose_name='Staff Member')),
                ('tech_rep', models.ForeignKey(blank=True, help_text='Agreements Tech Representative if Partner:NPS is selected', null=True, on_delete=django.db.models.deletion.SET_NULL, to='summit_auth.UserProfile', verbose_name='Agreements Tech Representative')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='modification',
            name='project',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='summit_projects.Project'),
        ),
        migrations.AddField(
            model_name='modfile',
            name='modification',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='summit_projects.Modification'),
        ),
        migrations.AddField(
            model_name='file',
            name='project',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='summit_projects.Project'),
        ),
    ]
